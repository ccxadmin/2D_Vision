<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:components="clr-namespace:ControlShareResources.Attach">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="True"></Setter>
        <Setter Property="Foreground" Value="#ffffff"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Border BorderThickness="1.5" Background="#ff6d3c"  
                                 CornerRadius="{TemplateBinding components:ButtonAttach.ButtonCornerRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="5"  Content="{TemplateBinding Header}" VerticalAlignment="Center"/>
                                <ToggleButton x:Name="HeaderSite" Grid.Column="1"   Background="Transparent"
                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                         
                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"                                  
                          Style="{DynamicResource ExpanderToggleButtonStyle}" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="ExpandSite" Grid.Row="1" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--<Setter Property="Height" Value="30" />-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Gainsboro"/>
        <!--<Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="宋体" />
        <Setter Property="FontWeight" Value="Bold" />-->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="Padding" Value="5 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Canvas Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">

                        <Canvas x:Name="canvNormal" Visibility="Visible" 
                     Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                     Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Canvas.Right="5">
                            <Path Data="M 0 0 L 6 6  12 0 " Stroke="White" StrokeThickness="2" Canvas.Right="5" Canvas.Top="10"/>
                            <Path Data="M 0 0 L 6 6  12 0 " Stroke="White" StrokeThickness="2" Canvas.Right="5" Canvas.Top="15"/>
                        </Canvas>
                        <Canvas x:Name="canvChecked" Visibility="Hidden" 
                     Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                     Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Canvas.Right="5">
                            <Path Data="M 0 0 L 6 -6  12 0 " Stroke="White" StrokeThickness="2" Canvas.Right="5" Canvas.Top="15"/>
                            <Path Data="M 0 0 L 6 -6  12 0 " Stroke="White" StrokeThickness="2" Canvas.Right="5" Canvas.Top="20"/>
                        </Canvas>

                        <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     Margin="{TemplateBinding Padding}" 
                     RecognizesAccessKey="True"                       
                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Canvas>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="SlateGray" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="canvChecked" Value="Visible" />
                            <Setter Property="Visibility" TargetName="canvNormal" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>