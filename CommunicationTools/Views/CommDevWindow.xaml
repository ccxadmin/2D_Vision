<Window x:Class="CommunicationTools.Views.CommDevWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CommunicationTools.Views"
               xmlns:model="clr-namespace:CommunicationTools.Models"
 xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"    
xmlns:attach="clr-namespace:ControlShareResources.Attach;assembly=ControlShareResources"
xmlns:uc="clr-namespace:ControlShareResources.UserControls;assembly=ControlShareResources"
  
Style="{x:Null}" FocusVisualStyle="{x:Null}"  Closing="Window_Closing"
mc:Ignorable="d"  Loaded="Window_Loaded" Title="通讯管理"
Height="600" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ControlShareResources;component/Control.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="360"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <model:BoolConverter x:Key="boolConverter" />
        </Grid.Resources>
        <Rectangle Margin="1" Stroke="#ff6d3c" StrokeThickness="1.5"/>
        <Label Style="{DynamicResource LabelStyle}" Content="设备列表："
               HorizontalAlignment="Left" VerticalAlignment="Top"
               Margin="10,14,0,0"
               />

        <ComboBox Style="{DynamicResource MyCbbStyle}"
                  HorizontalAlignment="Left" VerticalAlignment="Top"
                  Margin="90,10,0,0" Width="180" Height="30"
                  ItemsSource="{Binding Model.CommDevTypeList,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                 SelectedValue="{Binding Model.CommDevSelectName,Mode=TwoWay}"
                 SelectedIndex="{Binding Model.CommDevSelectIndex,Mode=TwoWay}"                                    
                  >
            

        </ComboBox>

        <Button Style="{DynamicResource PrimaryButton}" Content="+"
                HorizontalAlignment="Left" VerticalAlignment="Top"
                  attach:ButtonAttach.ButtonCornerRadius="3"
                Margin="275,10,0,0" Height="30" Width="35"
                Command="{Binding AddCommDevClickCommand}"/>
        <Button Style="{DynamicResource PrimaryButton}" Content="-"
         HorizontalAlignment="Left" VerticalAlignment="Top"
                attach:ButtonAttach.ButtonCornerRadius="3"
         Margin="315,10,0,0" Height="30" Width="35"
                 Command="{Binding RemoveCommDevClickCommand}"/>

        <ListView   Margin="10,50,10,10" 
            Style="{DynamicResource ListViewStyle}" 
                 x:Name="listViewOfDevInfo"  
                 SelectedIndex="{Binding Model.DevInfoSelectIndex,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                ItemsSource="{Binding Model.DevInfoList,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   >

            <ListView.View>
                <GridView>
                    <GridViewColumn Header="序号" Width="50" DisplayMemberBinding="{Binding Path=ID}"/>
                    <GridViewColumn Header="设备描述" Width="120" DisplayMemberBinding="{Binding Path=DevDescrip}"/>
                    <GridViewColumn Header="状态" Width="120" DisplayMemberBinding="{Binding Path=DevStatus}"/>
                   
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                   
                    <EventSetter Event="MouseDoubleClick" Handler="DevListViewItem__MouseDoubleClick"/>
              
                    <Setter Property="Background" Value="#ffffff"/>
                    <Setter Property="Foreground"  Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#dddddd"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="#ff6d3c"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                      
                    </Style.Triggers>



                </Style>
            </ListView.ItemContainerStyle>
            <!--<behaviors:Interaction.Triggers>
               <behaviors:EventTrigger EventName="MouseDoubleClick">
                   <behaviors:InvokeCommandAction Command="{Binding ToolsOfPosDoubleClickCommand}" CommandParameter="{Binding ElementName=listViewToolsOfPosition,Path=SelectedValue}"/>
               </behaviors:EventTrigger>
               <behaviors:EventTrigger EventName="MouseDown">
                   <behaviors:InvokeCommandAction Command="{Binding ToolsOfPosMouseDownCommand}" CommandParameter="{Binding ElementName=listViewToolsOfPosition,Path=SelectedValue}"/>
               </behaviors:EventTrigger>
           </behaviors:Interaction.Triggers>-->

        </ListView>

        <Rectangle Margin="1" Grid.Column="1"  Stroke="#ff6d3c" StrokeThickness="1.5"/>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="200"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0" Header="参数"
                      Style="{DynamicResource GroupBoxStyle}" Visibility="{Binding Model.FrameParamsVisib}">
                <Grid>
                    <Label Content="IP：" Style="{DynamicResource LabelStyle}"
                       Margin="20,22,0,0" HorizontalAlignment="Left"
                       VerticalAlignment="Top"/>
                    <TextBox Style="{DynamicResource baseInput}"
                             attach:TexboxAttach.TextBoxCornerRadius="3"
                         HorizontalAlignment="Left" VerticalAlignment="Top"
                         Margin="80,20,0,0" Width="150" Height="30"
                             Text="{Binding Model.IPtext,Mode=TwoWay}"
                             IsEnabled="{Binding Model.IsOpen , Converter={StaticResource boolConverter}}"/>
                    <Label Content="Port：" Style="{DynamicResource LabelStyle}"
    Margin="20,62,0,0" HorizontalAlignment="Left"
    VerticalAlignment="Top"/>
                    <uc:MyNumUpDown 
      HorizontalAlignment="Left" VerticalAlignment="Top"
      Margin="80,60,0,0" Width="150" Height="30"
                       OffsetValue="1"
                        MinValue="1000" MaxValue="99999"
                        DefaultValue="10000" DecimalPlaces="0"
                          IsEnabled="{Binding Model.IsOpen , Converter={StaticResource boolConverter}}"
                      NumericValue="{Binding Model.PortValue,Mode=TwoWay}"  />
                    <Label Content="客户端：" Style="{DynamicResource LabelStyle}"
Margin="20,102,0,0" HorizontalAlignment="Left"
                       Visibility="{Binding Model.LblClientsVisib}"       
VerticalAlignment="Top"/>
                    <ComboBox Style="{DynamicResource MyCbbStyle}"
  HorizontalAlignment="Left" VerticalAlignment="Top"
  Margin="80,100,0,0" Width="150" Height="30"
                             SelectedIndex="{Binding Model.ClientsSelectIndex,Mode=TwoWay}"
                              ItemsSource="{Binding Model.ClientsList,Mode=TwoWay}"
                             Visibility="{Binding Model.CbxCilentsVisib}"          >
                 
                    
                    
                    </ComboBox>

                    <Button Style="{DynamicResource PrimaryButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Top"
                            Margin="250,20,0,0" Content="刷新" 
                            Height="30" Width="100"
                            Visibility="{Binding Model.BtnRefreshVisib}"
                            attach:ButtonAttach.ButtonCornerRadius="3"
                           Command="{Binding btnRefreshClickCommand}"     />
                    <Button Style="{DynamicResource PrimaryButton}"
         HorizontalAlignment="Left" VerticalAlignment="Top"
         Margin="250,60,0,0" Content="{Binding Model.BtnContent}" 
         Height="30" Width="100"   Command="{Binding btnOPenClickCommand}"  
                              IsEnabled="{Binding Model.IsOpen , Converter={StaticResource boolConverter}}"
         attach:ButtonAttach.ButtonCornerRadius="3"/>

                    <Button Style="{DynamicResource PrimaryButton}"
         HorizontalAlignment="Left" VerticalAlignment="Top"
         Margin="250,100,0,0" Content="关闭" 
         Height="30" Width="100"  Command="{Binding btnCloseClickCommand}"  
                              IsEnabled="{Binding Model.IsOpen }"
         attach:ButtonAttach.ButtonCornerRadius="3"/>

                </Grid>



            </GroupBox>
            <GroupBox Grid.Row="1" Header="收发数据"
                      Style="{DynamicResource GroupBoxStyle}" Visibility="{Binding Model.FrameParamsVisib}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Row="0" Header="接收" Foreground="#ff6d3c">
                        <TextBox TextWrapping="Wrap" Margin="3" IsReadOnly="True"
                                 HorizontalScrollBarVisibility="Disabled"
                                 VerticalScrollBarVisibility="Auto"
                                 HorizontalContentAlignment="Left"
                                
                                 VerticalContentAlignment="Top"  x:Name="recieveTxb">
                        </TextBox>

                    </GroupBox>

                    <GroupBox Grid.Row="1" Header="发送" Foreground="#ff6d3c">
                        <Grid>
                        <TextBox TextWrapping="Wrap" Margin="3,3,60,3" 
           HorizontalScrollBarVisibility="Disabled"
           VerticalScrollBarVisibility="Auto"
           HorizontalContentAlignment="Left"    IsEnabled="{Binding Model.IsOpen}"
           VerticalContentAlignment="Top"  Text="{Binding Model.SendText,Mode=TwoWay}">
                        </TextBox>
                            <Button Style="{DynamicResource PrimaryButton}"
                                    HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                    Margin="2" Content="发送" Width="55"
                                    attach:ButtonAttach.ButtonCornerRadius="3"
                                     IsEnabled="{Binding Model.IsOpen}"
                                    Command="{Binding SendDataClickCommand}"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </GroupBox>
        </Grid>
     


    </Grid>
</Window>
